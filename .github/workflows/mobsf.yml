# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MobSF

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '39 7 * * 5'

permissions:
  contents: read

jobs:
  mobile-security:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Run mobsfscan
        uses: MobSF/mobsfscan@a60d10a83af68e23e0b30611c6515da604f06f65
        with:
          args: . --sarif --output results.sarif || true

      - name: Upload mobsfscan report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
            - name: Cache
  uses: actions/cache@v4.0.2
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    enableCrossOsArchive: # optional, default is false
    # Fail the workflow if cache entry is not found
    fail-on-cache-miss: # optional, default is false
    # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
    lookup-only: # optional, default is false
    # Run the post step to save the cache even if another step before fails
    save-always: # optional, default is false
                      - name: SecureStack All-In-One GitHub Action
  # You may pin to the exact commit or the version.
  # uses: SecureStackCo/actions-all-in-one@96dc79a3c4081a8333040c6bf84b0c528ccb1eb9
  uses: SecureStackCo/actions-all-in-one@v0.1.2
  with:
    # SecureStack API key - generate an API key at https://app.securestack.com
    securestack_api_key: 
    # SecureStack Application ID - can be retrieved by accessing required application at https://app.securestack.com
    securestack_app_id: 
    # Severities lower than this value will be reported in the workflow console but will not cause an error for the action; value should be one of: critical | high | medium | low
    severity: 
                      - name: SecureStack Secrets Analysis
  # You may pin to the exact commit or the version.
  # uses: SecureStackCo/actions-secrets@68f5dca939e2bf6b627449bd5c00f1bb423b01ca
  uses: SecureStackCo/actions-secrets@v0.1.3
  with:
    # SecureStack API key - generate one at https://app.securestack.com
    securestack_api_key: 
    # SecureStack Application ID - available when viewing applications at https://app.securestack.com
    securestack_app_id: 
    # Severities lower than this input value will not be reported; value should be one of: critical | high | medium | low
    severity: 
    # Optional flags for the bloodhound-cli secrets command - run bloodhound-cli code --help for more details.
    flags: # optional, default is 
          
